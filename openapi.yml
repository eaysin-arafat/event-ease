openapi: 3.0.1
info:
  title: EventEase API
  version: 1.0.0
  description: API documentation for the EventEase platform, managing events and attendees with real-time updates.
  contact:
    name: Eaysin Arafat
    url: https://eaysin-arafat.vercel.app/
    email: eaysin.arafat.j@gmail.com
servers:
  - url: http://localhost:4000/api/v1
    description: Local Development Server

tags:
  - name: Auth
    description: Endpoints for user registration and login.
  - name: Events
    description: Endpoints for event management.
  - name: Attendees
    description: Endpoints for attendee registration.

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: User registration
      description: Register a new user with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        "201":
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          $ref: "#/components/responses/400"

  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Login a user using email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        200:
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1...
        401:
          description: Invalid credentials.

  /events:
    post:
      tags:
        - Events
      summary: Create an event
      description: Create a new event.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tech Conference 2025
                date:
                  type: string
                  format: date-time
                  example: 2025-02-15T10:00:00Z
                location:
                  type: string
                  example: Virtual
                maxAttendees:
                  type: integer
                  example: 100
      responses:
        201:
          description: Event created successfully.
        400:
          description: Invalid input.

    get:
      tags:
        - Events
      summary: List all events
      description: Retrieve a list of all events.
      responses:
        200:
          description: A list of events.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 60d5f4818f8b7c15e4eb4732
                    name:
                      type: string
                      example: Tech Conference 2025
                    date:
                      type: string
                      format: date-time
                      example: 2025-02-15T10:00:00Z
                    location:
                      type: string
                      example: Virtual
                    maxAttendees:
                      type: integer
                      example: 100
                    attendeesCount:
                      type: integer
                      example: 50
                    createdBy:
                      type: string
                      example: 60d5f4818f8b7c15e4eb4731

  /events/{eventId}:
    patch:
      tags:
        - Events
      summary: Update an event
      description: Update the details of an event.
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            example: 60d5f4818f8b7c15e4eb4732
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Event Name
                date:
                  type: string
                  format: date-time
                  example: 2025-03-01T12:00:00Z
                location:
                  type: string
                  example: Hybrid
                maxAttendees:
                  type: integer
                  example: 150
      responses:
        200:
          description: Event updated successfully.
        404:
          description: Event not found.

    delete:
      tags:
        - Events
      summary: Delete an event
      description: Delete an event by ID.
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            example: 60d5f4818f8b7c15e4eb4732
      responses:
        200:
          description: Event deleted successfully.
        404:
          description: Event not found.

  /attendees/register:
    post:
      tags:
        - Attendees
      summary: Register for an event
      description: Register an authenticated user for an event.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  example: 60d5f4818f8b7c15e4eb4732
      responses:
        201:
          description: Successfully registered.
        400:
          description: Event is at full capacity or invalid request.
        404:
          description: Event not found.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    "400":
      description: Bad Request Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 400
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "BAD_REQUEST"
                  message:
                    type: string
                    example: "Bad request"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/resource"
                  suggestion:
                    type: string
                    example: "Please check your request and try again."
    "401":
      description: Unauthorized Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 401
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "UNAUTHORIZED"
                  message:
                    type: string
                    example: "Unauthorized access"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/protected-resource"
                  suggestion:
                    type: string
                    example: "Please login to access this resource."
    "403":
      description: Forbidden Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 403
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "FORBIDDEN"
                  message:
                    type: string
                    example: "Forbidden access"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/restricted-resource"
                  suggestion:
                    type: string
                    example: "Check your permissions and try again."
    "404":
      description: Not Found Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 404
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "NOT_FOUND"
                  message:
                    type: string
                    example: "Resource not found"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/non-existent-resource"
                  suggestion:
                    type: string
                    example: "Ensure the resource ID is correct."
    "409":
      description: Conflict Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 409
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "CONFLICT"
                  message:
                    type: string
                    example: "Conflict occurred while processing the request"
                  details:
                    type: object

                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/resource"
                  suggestion:
                    type: string
                    example: "Try a different resource or modify your request."
    "415":
      description: Unsupported Media Type Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 415
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "UNSUPPORTED_MEDIA_TYPE"
                  message:
                    type: string
                    example: "Unsupported media type"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/resource"
                  suggestion:
                    type: string
                    example: "Ensure the Content-Type is correct."
    "500":
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              statusCode:
                type: integer
                example: 500
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "Internal server error"
                  details:
                    type: object
                  timestamp:
                    type: string
                    example: "2024-11-01T12:34:56Z"
                  path:
                    type: string
                    example: "/api/v1/some-resource"
                  suggestion:
                    type: string
                    example: "Please try again later."
